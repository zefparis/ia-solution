version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ia-solution-api:latest
    container_name: ia-solution-api
    restart: unless-stopped
    ports:
      - "${APP_PORT:-5000}:5000"
    env_file:
      - .env
    depends_on:
      - redis
      - elasticsearch
      - rabbitmq
    networks:
      - ia-solution-network
    volumes:
      - ./:/app
      - static-volume:/app/static
      - uploads-volume:/app/uploads
      - cache-volume:/app/cache

  redis:
    image: redis:6-alpine
    container_name: ia-solution-redis
    restart: unless-stopped
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ia-solution-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: ia-solution-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - ia-solution-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ia-solution-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - ia-solution-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: ia-solution-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static-volume:/var/www/static
      - uploads-volume:/var/www/uploads
    depends_on:
      - app
    networks:
      - ia-solution-network

networks:
  ia-solution-network:
    driver: bridge

volumes:
  redis-data:
  elasticsearch-data:
  rabbitmq-data:
  static-volume:
  uploads-volume:
  cache-volume:
